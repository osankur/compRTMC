MODULE main
IVAR
_rt_err : boolean;
VAR
cnt : 0..3;
err : boolean;
--inputs
i_RtoB_ACK1 : boolean;
controllable_BtoR_REQ0 : boolean;
i_RtoB_ACK0 : boolean;
controllable_BtoR_REQ1 : boolean;
controllable_BtoS_ACK0 : boolean;
controllable_BtoS_ACK1 : boolean;
i_FULL : boolean;
controllable_SLC0 : boolean;
i_nEMPTY : boolean;
i_StoB_REQ0 : boolean;
controllable_ENQ : boolean;
i_StoB_REQ1 : boolean;
controllable_DEQ : boolean;
--latches
n29 : boolean;
reg_stateG7_0_out : boolean;
reg_controllable_BtoR_REQ1_out : boolean;
reg_i_RtoB_ACK1_out : boolean;
sys_fair0done_out : boolean;
reg_controllable_BtoS_ACK0_out : boolean;
env_fair1done_out : boolean;
reg_i_nEMPTY_out : boolean;
reg_nstateG7_1_out : boolean;
reg_controllable_BtoS_ACK1_out : boolean;
reg_controllable_SLC0_out : boolean;
sys_fair1done_out : boolean;
env_fair0done_out : boolean;
reg_controllable_ENQ_out : boolean;
reg_i_FULL_out : boolean;
reg_stateG12_out : boolean;
fair_cnt0_out : boolean;
fair_cnt1_out : boolean;
reg_controllable_DEQ_out : boolean;
env_safe_err_happened_out : boolean;
reg_i_StoB_REQ1_out : boolean;
reg_i_RtoB_ACK0_out : boolean;
sys_fair2done_out : boolean;
reg_controllable_BtoR_REQ0_out : boolean;
reg_i_StoB_REQ0_out : boolean;
ASSIGN
init(cnt) := 0;
next(cnt) := case
    cnt < 3 : cnt+1;
    TRUE : 0;
esac;
init(err) := FALSE;
next(err) := err | _rt_err;
init(n29) := FALSE;
next(n29) := TRUE;
init(reg_stateG7_0_out) := FALSE;
next(reg_stateG7_0_out) := a310;
init(reg_controllable_BtoR_REQ1_out) := FALSE;
next(reg_controllable_BtoR_REQ1_out) := controllable_BtoR_REQ1;
init(reg_i_RtoB_ACK1_out) := FALSE;
next(reg_i_RtoB_ACK1_out) := i_RtoB_ACK1;
init(sys_fair0done_out) := FALSE;
next(sys_fair0done_out) := a342;
init(reg_controllable_BtoS_ACK0_out) := FALSE;
next(reg_controllable_BtoS_ACK0_out) := controllable_BtoS_ACK0;
init(env_fair1done_out) := FALSE;
next(env_fair1done_out) := a380;
init(reg_i_nEMPTY_out) := FALSE;
next(reg_i_nEMPTY_out) := i_nEMPTY;
init(reg_nstateG7_1_out) := FALSE;
next(reg_nstateG7_1_out) := !a388;
init(reg_controllable_BtoS_ACK1_out) := FALSE;
next(reg_controllable_BtoS_ACK1_out) := controllable_BtoS_ACK1;
init(reg_controllable_SLC0_out) := FALSE;
next(reg_controllable_SLC0_out) := controllable_SLC0;
init(sys_fair1done_out) := FALSE;
next(sys_fair1done_out) := a390;
init(env_fair0done_out) := FALSE;
next(env_fair0done_out) := a392;
init(reg_controllable_ENQ_out) := FALSE;
next(reg_controllable_ENQ_out) := controllable_ENQ;
init(reg_i_FULL_out) := FALSE;
next(reg_i_FULL_out) := i_FULL;
init(reg_stateG12_out) := FALSE;
next(reg_stateG12_out) := a396;
init(fair_cnt0_out) := FALSE;
next(fair_cnt0_out) := a404;
init(fair_cnt1_out) := FALSE;
next(fair_cnt1_out) := a412;
init(reg_controllable_DEQ_out) := FALSE;
next(reg_controllable_DEQ_out) := controllable_DEQ;
init(env_safe_err_happened_out) := FALSE;
next(env_safe_err_happened_out) := !a174;
init(reg_i_StoB_REQ1_out) := FALSE;
next(reg_i_StoB_REQ1_out) := i_StoB_REQ1;
init(reg_i_RtoB_ACK0_out) := FALSE;
next(reg_i_RtoB_ACK0_out) := i_RtoB_ACK0;
init(sys_fair2done_out) := FALSE;
next(sys_fair2done_out) := a414;
init(reg_controllable_BtoR_REQ0_out) := FALSE;
next(reg_controllable_BtoR_REQ0_out) := controllable_BtoR_REQ0;
init(reg_i_StoB_REQ0_out) := FALSE;
next(reg_i_StoB_REQ0_out) := i_StoB_REQ0;
DEFINE
--ands
a78 := reg_controllable_BtoR_REQ0_out & n29;
a80 := !a78 & i_RtoB_ACK0;
a82 := reg_controllable_BtoS_ACK0_out & n29;
a84 := a82 & !i_StoB_REQ0;
a86 := reg_i_StoB_REQ0_out & n29;
a88 := a86 & !i_StoB_REQ0;
a90 := !a88 & !a82;
a92 := !a90 & !a84;
a94 := reg_controllable_BtoS_ACK1_out & n29;
a96 := a94 & !i_StoB_REQ1;
a98 := reg_i_StoB_REQ1_out & n29;
a100 := a98 & !i_StoB_REQ1;
a102 := !a100 & !a94;
a104 := !a102 & !a96;
a106 := !a104 & !a92;
a108 := a106 & !a80;
a110 := reg_i_RtoB_ACK0_out & n29;
a112 := a110 & !i_RtoB_ACK0;
a114 := a112 & a78;
a116 := !a114 & a108;
a118 := reg_controllable_BtoR_REQ1_out & n29;
a120 := !a118 & i_RtoB_ACK1;
a122 := !a120 & a116;
a124 := reg_i_RtoB_ACK1_out & n29;
a126 := a124 & !i_RtoB_ACK1;
a128 := a126 & a118;
a130 := !a128 & a122;
a132 := reg_controllable_ENQ_out & n29;
a134 := reg_controllable_DEQ_out & n29;
a136 := !a134 & a132;
a138 := a136 & !i_nEMPTY;
a140 := !a138 & a130;
a142 := a134 & !a132;
a144 := a142 & i_FULL;
a146 := !a144 & a140;
a148 := !a142 & !a136;
a150 := reg_i_FULL_out & n29;
a152 := !a150 & i_FULL;
a154 := a150 & !i_FULL;
a156 := !a154 & !a152;
a158 := reg_i_nEMPTY_out & n29;
a160 := !a158 & i_nEMPTY;
a162 := a158 & !i_nEMPTY;
a164 := !a162 & !a160;
a166 := a164 & a156;
a168 := !a166 & a148;
a170 := !a168 & a146;
a172 := env_safe_err_happened_out & n29;
a174 := !a172 & a170;
a176 := !a126 & !a112;
a178 := a176 & controllable_DEQ;
a180 := !a82 & controllable_BtoS_ACK0;
a182 := !a94 & controllable_BtoS_ACK1;
a184 := !a182 & !a180;
a186 := a184 & controllable_ENQ;
a188 := controllable_ENQ & controllable_SLC0;
a190 := !a188 & a182;
a192 := !a182 & controllable_SLC0;
a194 := reg_nstateG7_1_out & n29;
a196 := reg_stateG7_0_out & n29;
a198 := a196 & !a194;
a200 := a198 & a118;
a202 := !a124 & a118;
a204 := a202 & !controllable_BtoR_REQ1;
a206 := !a86 & !a84;
a208 := !a206 & !controllable_BtoS_ACK1;
a210 := !a208 & controllable_BtoS_ACK0;
a212 := !a110 & !controllable_BtoR_REQ1;
a214 := !a212 & controllable_BtoR_REQ0;
a216 := a86 & a82;
a218 := a216 & !controllable_BtoS_ACK0;
a220 := !a98 & !a96;
a222 := a220 & controllable_BtoS_ACK1;
a224 := !a222 & !a218;
a226 := a98 & a94;
a228 := a226 & !controllable_BtoS_ACK1;
a230 := !a110 & a78;
a232 := a230 & !controllable_BtoR_REQ0;
a234 := !a232 & !a228;
a236 := a234 & a224;
a238 := a236 & !a214;
a240 := a238 & !a210;
a242 := a240 & !a204;
a244 := a124 & controllable_BtoR_REQ1;
a246 := !a244 & a242;
a248 := a196 & a194;
a250 := !a248 & !a118;
a252 := !a250 & a78;
a254 := !a252 & a246;
a256 := a254 & !a200;
a258 := controllable_ENQ & !controllable_SLC0;
a260 := !a258 & a180;
a262 := !a260 & a256;
a264 := a262 & !a192;
a266 := a264 & !a190;
a268 := a266 & !a186;
a270 := !a176 & !controllable_DEQ;
a272 := !a270 & a268;
a274 := a272 & !a178;
a276 := !controllable_DEQ & i_FULL;
a278 := a276 & controllable_ENQ;
a280 := !a278 & a274;
a282 := controllable_DEQ & !i_nEMPTY;
a284 := !a282 & a280;
a286 := fair_cnt1_out & n29;
a288 := fair_cnt0_out & n29;
a290 := a288 & a286;
a292 := !a290 & a284;
a294 := !a292 & a174;
a296 := a194 & !a78;
a298 := a296 & a118;
a300 := !a194 & a78;
a302 := a300 & !a118;
a304 := !a302 & !a298;
a306 := !a118 & !a78;
a308 := !a306 & !a196;
a310 := !a308 & a304;
a312 := sys_fair0done_out & n29;
a314 := !i_StoB_REQ0 & controllable_BtoS_ACK0;
a316 := i_StoB_REQ0 & !controllable_BtoS_ACK0;
a318 := !a316 & !a314;
a320 := !a318 & !a312;
a322 := !i_StoB_REQ1 & controllable_BtoS_ACK1;
a324 := i_StoB_REQ1 & !controllable_BtoS_ACK1;
a326 := !a324 & !a322;
a328 := sys_fair1done_out & n29;
a330 := !a328 & !a326;
a332 := !a330 & !a320;
a334 := reg_stateG12_out & n29;
a336 := sys_fair2done_out & n29;
a338 := !a336 & a334;
a340 := !a338 & a332;
a342 := !a340 & !a320;
a344 := !controllable_BtoR_REQ1 & i_RtoB_ACK1;
a346 := controllable_BtoR_REQ1 & !i_RtoB_ACK1;
a348 := !a346 & !a344;
a350 := env_fair1done_out & n29;
a352 := !a350 & !a348;
a354 := a318 & !a312;
a356 := !a328 & a326;
a358 := !a356 & !a354;
a360 := !a336 & !a334;
a362 := !a360 & a358;
a364 := a362 & !a340;
a366 := i_RtoB_ACK0 & !controllable_BtoR_REQ0;
a368 := !i_RtoB_ACK0 & controllable_BtoR_REQ0;
a370 := !a368 & !a366;
a372 := env_fair0done_out & n29;
a374 := !a372 & !a370;
a376 := !a374 & !a352;
a378 := !a376 & a364;
a380 := a378 & !a352;
a382 := !a300 & !a296;
a384 := !a382 & !a118;
a386 := a194 & a78;
a388 := !a386 & !a384;
a390 := !a340 & !a330;
a392 := a378 & !a374;
a394 := !a334 & !a158;
a396 := !a394 & !a134;
a398 := a376 & a288;
a400 := !a376 & !a288;
a402 := !a400 & !a398;
a404 := a402 & a364;
a406 := !a398 & a286;
a408 := a398 & !a286;
a410 := !a408 & !a406;
a412 := !a410 & a364;
a414 := !a338 & !a332;
--outputs
o0 := a294;
DEFINE
    _rt_release := !_rt_err & (cnt = 3);
    _rt_task1 := !_rt_release & !_rt_err & (reg_stateG12_out | reg_controllable_BtoR_REQ0_out);
    _rt_task2 := !_rt_release & !_rt_err & !_rt_task1 & (reg_i_RtoB_ACK1_out | reg_nstateG7_1_out | reg_i_nEMPTY_out);
INVARSPEC !err
--bad
--constraints
--justice
--fairness
