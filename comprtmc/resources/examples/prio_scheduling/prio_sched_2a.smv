-- Priority-based scheduler without preemption between two processes.
-- Each process sends signal _rt_readyi whenever it is ready to execute its rt task.
-- Whenever the scheduler is available, it schedules process 1 if it is ready,
-- otherwise, process 2 if it is ready, if none of them are ready,
-- then schedules a low priority task called idle.
-- Each task ends with a _rt_release signal, while _rt_miss means a deadline miss, and leads to the error state.
--
-- At each bigstep, the smv model is queried to know whether processes are _rt_ready.
-- Whether a process is ready depends on its internal state described by the circuit below.
-- Moreover, the timed automaton model constrains the interarrival times (time elapsed between two _rt_readyi),
-- and the task execution times for each process.
--
-- The circuit is bs16y.smv
MODULE main
VAR
--inputs
cmd : {check_ready0, check_ready1, cmd_sched, cmd_release, cmd_miss0, cmd_miss1};
is_ready0 : boolean;
is_ready1 : boolean;
err : boolean;
nondet : boolean;
controllable_do_shift : boolean;
sh_0_ : boolean;
sh_1_ : boolean;
sh_2_ : boolean;
sh_3_ : boolean;
--latches
benchn13 : boolean;
benchr_0__out : boolean;
benchr_1__out : boolean;
benchr_2__out : boolean;
benchr_3__out : boolean;
benchr_4__out : boolean;
benchr_5__out : boolean;
benchr_6__out : boolean;
benchr_7__out : boolean;
benchr_8__out : boolean;
benchr_9__out : boolean;
benchr_10__out : boolean;
benchr_11__out : boolean;
benchr_12__out : boolean;
benchr_13__out : boolean;
benchr_14__out : boolean;
benchr_15__out : boolean;
ASSIGN
init(cmd) := cmd_sched;
next(cmd) := case
    cmd = check_ready0 : check_ready1;
    cmd = check_ready1 : cmd_sched;
    cmd = cmd_sched : cmd_release;
    cmd = cmd_release : cmd_miss0;
    cmd = cmd_miss0 : cmd_miss1;
    cmd = cmd_miss1 : check_ready0;
esac;
init(is_ready0) := TRUE;
next(is_ready0) := case 
    _rt_sched0 : FALSE;
    _rt_ready0 : TRUE;
    TRUE : is_ready0;
esac;
init(is_ready1) := TRUE;
next(is_ready1) := case 
    _rt_sched1 : FALSE;
    _rt_ready1 : TRUE;
    TRUE : is_ready1;
esac;
init(err) := FALSE;
next(err) := err | _rt_miss0 | _rt_miss1;
init(benchn13) := FALSE;
next(benchn13) := TRUE;
init(benchr_0__out) := FALSE;
next(benchr_0__out) := !a172;
init(benchr_1__out) := FALSE;
next(benchr_1__out) := !a268;
init(benchr_2__out) := FALSE;
next(benchr_2__out) := !a316;
init(benchr_3__out) := FALSE;
next(benchr_3__out) := !a364;
init(benchr_4__out) := FALSE;
next(benchr_4__out) := !a388;
init(benchr_5__out) := FALSE;
next(benchr_5__out) := !a412;
init(benchr_6__out) := FALSE;
next(benchr_6__out) := !a436;
init(benchr_7__out) := FALSE;
next(benchr_7__out) := !a460;
init(benchr_8__out) := FALSE;
next(benchr_8__out) := !a472;
init(benchr_9__out) := FALSE;
next(benchr_9__out) := !a484;
init(benchr_10__out) := FALSE;
next(benchr_10__out) := !a496;
init(benchr_11__out) := FALSE;
next(benchr_11__out) := !a508;
init(benchr_12__out) := FALSE;
next(benchr_12__out) := !a520;
init(benchr_13__out) := FALSE;
next(benchr_13__out) := !a532;
init(benchr_14__out) := FALSE;
next(benchr_14__out) := !a544;
init(benchr_15__out) := FALSE;
next(benchr_15__out) := !a556;
DEFINE
--ands
a46 := !benchr_0__out & benchn13;
a48 := benchr_1__out & benchn13;
a50 := a48 & sh_0_;
a52 := benchr_2__out & benchn13;
a54 := a52 & !sh_0_;
a56 := !a54 & !a50;
a58 := !a56 & sh_1_;
a60 := benchr_3__out & benchn13;
a62 := a60 & sh_0_;
a64 := benchr_4__out & benchn13;
a66 := a64 & !sh_0_;
a68 := !a66 & !a62;
a70 := !a68 & !sh_1_;
a72 := !a70 & !a58;
a74 := !a72 & sh_2_;
a76 := benchr_5__out & benchn13;
a78 := a76 & sh_0_;
a80 := benchr_6__out & benchn13;
a82 := a80 & !sh_0_;
a84 := !a82 & !a78;
a86 := !a84 & sh_1_;
a88 := benchr_7__out & benchn13;
a90 := a88 & sh_0_;
a92 := benchr_8__out & benchn13;
a94 := a92 & !sh_0_;
a96 := !a94 & !a90;
a98 := !a96 & !sh_1_;
a100 := !a98 & !a86;
a102 := !a100 & !sh_2_;
a104 := !a102 & !a74;
a106 := !a104 & sh_3_;
a108 := benchr_9__out & benchn13;
a110 := a108 & sh_0_;
a112 := benchr_10__out & benchn13;
a114 := a112 & !sh_0_;
a116 := !a114 & !a110;
a118 := !a116 & sh_1_;
a120 := benchr_11__out & benchn13;
a122 := a120 & sh_0_;
a124 := benchr_12__out & benchn13;
a126 := a124 & !sh_0_;
a128 := !a126 & !a122;
a130 := !a128 & !sh_1_;
a132 := !a130 & !a118;
a134 := !a132 & sh_2_;
a136 := benchr_13__out & benchn13;
a138 := a136 & sh_0_;
a140 := benchr_14__out & benchn13;
a142 := a140 & !sh_0_;
a144 := !a142 & !a138;
a146 := !a144 & sh_1_;
a148 := benchr_15__out & benchn13;
a150 := a148 & sh_0_;
a152 := !a46 & !sh_0_;
a154 := !a152 & !a150;
a156 := !a154 & !sh_1_;
a158 := !a156 & !a146;
a160 := !a158 & !sh_2_;
a162 := !a160 & !a134;
a164 := !a162 & !sh_3_;
a166 := !a164 & !a106;
a168 := !a166 & controllable_do_shift;
a170 := !a46 & !controllable_do_shift;
a172 := !a170 & !a168;
a174 := a52 & sh_0_;
a176 := a60 & !sh_0_;
a178 := !a176 & !a174;
a180 := !a178 & sh_1_;
a182 := a64 & sh_0_;
a184 := a76 & !sh_0_;
a186 := !a184 & !a182;
a188 := !a186 & !sh_1_;
a190 := !a188 & !a180;
a192 := !a190 & sh_2_;
a194 := a80 & sh_0_;
a196 := a88 & !sh_0_;
a198 := !a196 & !a194;
a200 := !a198 & sh_1_;
a202 := a92 & sh_0_;
a204 := a108 & !sh_0_;
a206 := !a204 & !a202;
a208 := !a206 & !sh_1_;
a210 := !a208 & !a200;
a212 := !a210 & !sh_2_;
a214 := !a212 & !a192;
a216 := !a214 & sh_3_;
a218 := a112 & sh_0_;
a220 := a120 & !sh_0_;
a222 := !a220 & !a218;
a224 := !a222 & sh_1_;
a226 := a124 & sh_0_;
a228 := a136 & !sh_0_;
a230 := !a228 & !a226;
a232 := !a230 & !sh_1_;
a234 := !a232 & !a224;
a236 := !a234 & sh_2_;
a238 := a140 & sh_0_;
a240 := a148 & !sh_0_;
a242 := !a240 & !a238;
a244 := !a242 & sh_1_;
a246 := !a46 & sh_0_;
a248 := a48 & !sh_0_;
a250 := !a248 & !a246;
a252 := !a250 & !sh_1_;
a254 := !a252 & !a244;
a256 := !a254 & !sh_2_;
a258 := !a256 & !a236;
a260 := !a258 & !sh_3_;
a262 := !a260 & !a216;
a264 := !a262 & controllable_do_shift;
a266 := a48 & !controllable_do_shift;
a268 := !a266 & !a264;
a270 := !a68 & sh_1_;
a272 := !a84 & !sh_1_;
a274 := !a272 & !a270;
a276 := !a274 & sh_2_;
a278 := !a96 & sh_1_;
a280 := !a116 & !sh_1_;
a282 := !a280 & !a278;
a284 := !a282 & !sh_2_;
a286 := !a284 & !a276;
a288 := !a286 & sh_3_;
a290 := !a128 & sh_1_;
a292 := !a144 & !sh_1_;
a294 := !a292 & !a290;
a296 := !a294 & sh_2_;
a298 := !a154 & sh_1_;
a300 := !a56 & !sh_1_;
a302 := !a300 & !a298;
a304 := !a302 & !sh_2_;
a306 := !a304 & !a296;
a308 := !a306 & !sh_3_;
a310 := !a308 & !a288;
a312 := !a310 & controllable_do_shift;
a314 := a52 & !controllable_do_shift;
a316 := !a314 & !a312;
a318 := !a186 & sh_1_;
a320 := !a198 & !sh_1_;
a322 := !a320 & !a318;
a324 := !a322 & sh_2_;
a326 := !a206 & sh_1_;
a328 := !a222 & !sh_1_;
a330 := !a328 & !a326;
a332 := !a330 & !sh_2_;
a334 := !a332 & !a324;
a336 := !a334 & sh_3_;
a338 := !a230 & sh_1_;
a340 := !a242 & !sh_1_;
a342 := !a340 & !a338;
a344 := !a342 & sh_2_;
a346 := !a250 & sh_1_;
a348 := !a178 & !sh_1_;
a350 := !a348 & !a346;
a352 := !a350 & !sh_2_;
a354 := !a352 & !a344;
a356 := !a354 & !sh_3_;
a358 := !a356 & !a336;
a360 := !a358 & controllable_do_shift;
a362 := a60 & !controllable_do_shift;
a364 := !a362 & !a360;
a366 := !a100 & sh_2_;
a368 := !a132 & !sh_2_;
a370 := !a368 & !a366;
a372 := !a370 & sh_3_;
a374 := !a158 & sh_2_;
a376 := !a72 & !sh_2_;
a378 := !a376 & !a374;
a380 := !a378 & !sh_3_;
a382 := !a380 & !a372;
a384 := !a382 & controllable_do_shift;
a386 := a64 & !controllable_do_shift;
a388 := !a386 & !a384;
a390 := !a210 & sh_2_;
a392 := !a234 & !sh_2_;
a394 := !a392 & !a390;
a396 := !a394 & sh_3_;
a398 := !a254 & sh_2_;
a400 := !a190 & !sh_2_;
a402 := !a400 & !a398;
a404 := !a402 & !sh_3_;
a406 := !a404 & !a396;
a408 := !a406 & controllable_do_shift;
a410 := a76 & !controllable_do_shift;
a412 := !a410 & !a408;
a414 := !a282 & sh_2_;
a416 := !a294 & !sh_2_;
a418 := !a416 & !a414;
a420 := !a418 & sh_3_;
a422 := !a302 & sh_2_;
a424 := !a274 & !sh_2_;
a426 := !a424 & !a422;
a428 := !a426 & !sh_3_;
a430 := !a428 & !a420;
a432 := !a430 & controllable_do_shift;
a434 := a80 & !controllable_do_shift;
a436 := !a434 & !a432;
a438 := !a330 & sh_2_;
a440 := !a342 & !sh_2_;
a442 := !a440 & !a438;
a444 := !a442 & sh_3_;
a446 := !a350 & sh_2_;
a448 := !a322 & !sh_2_;
a450 := !a448 & !a446;
a452 := !a450 & !sh_3_;
a454 := !a452 & !a444;
a456 := !a454 & controllable_do_shift;
a458 := a88 & !controllable_do_shift;
a460 := !a458 & !a456;
a462 := !a162 & sh_3_;
a464 := !a104 & !sh_3_;
a466 := !a464 & !a462;
a468 := !a466 & controllable_do_shift;
a470 := a92 & !controllable_do_shift;
a472 := !a470 & !a468;
a474 := !a258 & sh_3_;
a476 := !a214 & !sh_3_;
a478 := !a476 & !a474;
a480 := !a478 & controllable_do_shift;
a482 := a108 & !controllable_do_shift;
a484 := !a482 & !a480;
a486 := !a306 & sh_3_;
a488 := !a286 & !sh_3_;
a490 := !a488 & !a486;
a492 := !a490 & controllable_do_shift;
a494 := a112 & !controllable_do_shift;
a496 := !a494 & !a492;
a498 := !a354 & sh_3_;
a500 := !a334 & !sh_3_;
a502 := !a500 & !a498;
a504 := !a502 & controllable_do_shift;
a506 := a120 & !controllable_do_shift;
a508 := !a506 & !a504;
a510 := !a378 & sh_3_;
a512 := !a370 & !sh_3_;
a514 := !a512 & !a510;
a516 := !a514 & controllable_do_shift;
a518 := a124 & !controllable_do_shift;
a520 := !a518 & !a516;
a522 := !a402 & sh_3_;
a524 := !a394 & !sh_3_;
a526 := !a524 & !a522;
a528 := !a526 & controllable_do_shift;
a530 := a136 & !controllable_do_shift;
a532 := !a530 & !a528;
a534 := !a426 & sh_3_;
a536 := !a418 & !sh_3_;
a538 := !a536 & !a534;
a540 := !a538 & controllable_do_shift;
a542 := a140 & !controllable_do_shift;
a544 := !a542 & !a540;
a546 := !a450 & sh_3_;
a548 := !a442 & !sh_3_;
a550 := !a548 & !a546;
a552 := !a550 & controllable_do_shift;
a554 := a148 & !controllable_do_shift;
a556 := !a554 & !a552;
--outputs
o0 := a46;
DEFINE
    _rt_miss0 := cmd = cmd_miss0 & is_ready0 & nondet;
    _rt_miss1 := cmd = cmd_miss1 & is_ready1 & nondet;
    _rt_ready0 := cmd = check_ready0 & benchr_0__out & nondet;
    _rt_ready1 := cmd = check_ready1 & benchr_1__out & nondet;
    _rt_sched0 := cmd = cmd_sched & is_ready0 & nondet;
    _rt_sched1 := cmd = cmd_sched & !is_ready0 & is_ready1 & nondet;
    _rt_idle := cmd = cmd_sched & !is_ready0 & !is_ready1;
    _rt_release := cmd = cmd_release & nondet;
INVARSPEC !err