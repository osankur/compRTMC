<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>const int K =3;
chan robot, obs;
bool rleft, rright, rup, rdown;
bool oleft, oright, oup, odown;

int[0,3*K] robot_x, robot_y;
int[0,3*K] obs1_x=2;
int[0,3*K] obs1_y;


int[0,32] cnt;

// Inputs
bool i_RtoB_ACK1;
bool i_StoB_REQ1;
bool i_RtoB_ACK0;
bool i_FULL;
bool i_nEMPTY;
bool i_StoB_REQ0;

bool error;

bool controllable_BtoR_REQ0;
bool controllable_BtoR_REQ1;
bool controllable_BtoS_ACK0;
bool controllable_BtoS_ACK1;
bool controllable_SLC0;
bool controllable_ENQ;
bool controllable_DEQ;
// Latches
bool n29;
bool reg_stateG7_0_out;
bool reg_controllable_BtoR_REQ1_out;
bool reg_i_RtoB_ACK1_out;
bool sys_fair0done_out;
bool reg_controllable_BtoS_ACK0_out;
bool env_fair1done_out;
bool reg_i_nEMPTY_out;
bool reg_nstateG7_1_out;
bool reg_controllable_BtoS_ACK1_out;
bool reg_controllable_SLC0_out;
bool sys_fair1done_out;
bool env_fair0done_out;
bool reg_controllable_ENQ_out;
bool reg_i_FULL_out;
bool reg_stateG12_out;
bool fair_cnt0_out;
bool fair_cnt1_out;
bool reg_controllable_DEQ_out;
bool env_safe_err_happened_out;
bool reg_i_StoB_REQ1_out;
bool reg_i_RtoB_ACK0_out;
bool sys_fair2done_out;
bool reg_controllable_BtoR_REQ0_out;
bool reg_i_StoB_REQ0_out;
bool a78;
bool a80;
bool a82;
bool a84;
bool a86;
bool a88;
bool a90;
bool a92;
bool a94;
bool a96;
bool a98;
bool a100;
bool a102;
bool a104;
bool a106;
bool a108;
bool a110;
bool a112;
bool a114;
bool a116;
bool a118;
bool a120;
bool a122;
bool a124;
bool a126;
bool a128;
bool a130;
bool a132;
bool a134;
bool a136;
bool a138;
bool a140;
bool a142;
bool a144;
bool a146;
bool a148;
bool a150;
bool a152;
bool a154;
bool a156;
bool a158;
bool a160;
bool a162;
bool a164;
bool a166;
bool a168;
bool a170;
bool a172;
bool a174;
bool a176;
bool a178;
bool a180;
bool a182;
bool a184;
bool a186;
bool a188;
bool a190;
bool a192;
bool a194;
bool a196;
bool a198;
bool a200;
bool a202;
bool a204;
bool a206;
bool a208;
bool a210;
bool a212;
bool a214;
bool a216;
bool a218;
bool a220;
bool a222;
bool a224;
bool a226;
bool a228;
bool a230;
bool a232;
bool a234;
bool a236;
bool a238;
bool a240;
bool a242;
bool a244;
bool a246;
bool a248;
bool a250;
bool a252;
bool a254;
bool a256;
bool a258;
bool a260;
bool a262;
bool a264;
bool a266;
bool a268;
bool a270;
bool a272;
bool a274;
bool a276;
bool a278;
bool a280;
bool a282;
bool a284;
bool a286;
bool a288;
bool a290;
bool a292;
bool a294;
bool a296;
bool a298;
bool a300;
bool a302;
bool a304;
bool a306;
bool a308;
bool a310;
bool a312;
bool a314;
bool a316;
bool a318;
bool a320;
bool a322;
bool a324;
bool a326;
bool a328;
bool a330;
bool a332;
bool a334;
bool a336;
bool a338;
bool a340;
bool a342;
bool a344;
bool a346;
bool a348;
bool a350;
bool a352;
bool a354;
bool a356;
bool a358;
bool a360;
bool a362;
bool a364;
bool a366;
bool a368;
bool a370;
bool a372;
bool a374;
bool a376;
bool a378;
bool a380;
bool a382;
bool a384;
bool a386;
bool a388;
bool a390;
bool a392;
bool a394;
bool a396;
bool a398;
bool a400;
bool a402;
bool a404;

bool shock;
bool maintenance;

void update(){
	shock = !a294;
	maintenance = (cnt &amp; 2)&gt;&gt;1;
//	shock pout0 = reg_stateG7_0_out;
// maintenance = reg_nstateG7_1_out || reg_stateG12_out;

a78 := reg_controllable_BtoR_REQ0_out &amp; n29;
a80 := !a78 &amp; i_RtoB_ACK0;
a82 := reg_controllable_BtoS_ACK0_out &amp; n29;
a84 := a82 &amp; !i_StoB_REQ0;
a86 := reg_i_StoB_REQ0_out &amp; n29;
a88 := a86 &amp; !i_StoB_REQ0;
a90 := !a88 &amp; !a82;
a92 := !a90 &amp; !a84;
a94 := reg_controllable_BtoS_ACK1_out &amp; n29;
a96 := a94 &amp; !i_StoB_REQ1;
a98 := reg_i_StoB_REQ1_out &amp; n29;
a100 := a98 &amp; !i_StoB_REQ1;
a102 := !a100 &amp; !a94;
a104 := !a102 &amp; !a96;
a106 := !a104 &amp; !a92;
a108 := a106 &amp; !a80;
a110 := reg_i_RtoB_ACK0_out &amp; n29;
a112 := a110 &amp; !i_RtoB_ACK0;
a114 := a112 &amp; a78;
a116 := !a114 &amp; a108;
a118 := reg_controllable_BtoR_REQ1_out &amp; n29;
a120 := !a118 &amp; i_RtoB_ACK1;
a122 := !a120 &amp; a116;
a124 := reg_i_RtoB_ACK1_out &amp; n29;
a126 := a124 &amp; !i_RtoB_ACK1;
a128 := a126 &amp; a118;
a130 := !a128 &amp; a122;
a132 := reg_controllable_ENQ_out &amp; n29;
a134 := reg_controllable_DEQ_out &amp; n29;
a136 := !a134 &amp; a132;
a138 := a136 &amp; !i_nEMPTY;
a140 := !a138 &amp; a130;
a142 := a134 &amp; !a132;
a144 := a142 &amp; i_FULL;
a146 := !a144 &amp; a140;
a148 := !a142 &amp; !a136;
a150 := reg_i_FULL_out &amp; n29;
a152 := !a150 &amp; i_FULL;
a154 := a150 &amp; !i_FULL;
a156 := !a154 &amp; !a152;
a158 := reg_i_nEMPTY_out &amp; n29;
a160 := !a158 &amp; i_nEMPTY;
a162 := a158 &amp; !i_nEMPTY;
a164 := !a162 &amp; !a160;
a166 := a164 &amp; a156;
a168 := !a166 &amp; a148;
a170 := !a168 &amp; a146;
a172 := env_safe_err_happened_out &amp; n29;
a174 := !a172 &amp; a170;
a176 := !a126 &amp; !a112;
a178 := a176 &amp; controllable_DEQ;
a180 := !a82 &amp; controllable_BtoS_ACK0;
a182 := !a94 &amp; controllable_BtoS_ACK1;
a184 := !a182 &amp; !a180;
a186 := a184 &amp; controllable_ENQ;
a188 := controllable_ENQ &amp; controllable_SLC0;
a190 := !a188 &amp; a182;
a192 := !a182 &amp; controllable_SLC0;
a194 := reg_nstateG7_1_out &amp; n29;
a196 := reg_stateG7_0_out &amp; n29;
a198 := a196 &amp; !a194;
a200 := a198 &amp; a118;
a202 := !a124 &amp; a118;
a204 := a202 &amp; !controllable_BtoR_REQ1;
a206 := !a86 &amp; !a84;
a208 := !a206 &amp; !controllable_BtoS_ACK1;
a210 := !a208 &amp; controllable_BtoS_ACK0;
a212 := !a110 &amp; !controllable_BtoR_REQ1;
a214 := !a212 &amp; controllable_BtoR_REQ0;
a216 := a86 &amp; a82;
a218 := a216 &amp; !controllable_BtoS_ACK0;
a220 := !a98 &amp; !a96;
a222 := a220 &amp; controllable_BtoS_ACK1;
a224 := !a222 &amp; !a218;
a226 := a98 &amp; a94;
a228 := a226 &amp; !controllable_BtoS_ACK1;
a230 := !a110 &amp; a78;
a232 := a230 &amp; !controllable_BtoR_REQ0;
a234 := !a232 &amp; !a228;
a236 := a234 &amp; a224;
a238 := a236 &amp; !a214;
a240 := a238 &amp; !a210;
a242 := a240 &amp; !a204;
a244 := a124 &amp; controllable_BtoR_REQ1;
a246 := !a244 &amp; a242;
a248 := a196 &amp; a194;
a250 := !a248 &amp; !a118;
a252 := !a250 &amp; a78;
a254 := !a252 &amp; a246;
a256 := a254 &amp; !a200;
a258 := controllable_ENQ &amp; !controllable_SLC0;
a260 := !a258 &amp; a180;
a262 := !a260 &amp; a256;
a264 := a262 &amp; !a192;
a266 := a264 &amp; !a190;
a268 := a266 &amp; !a186;
a270 := !a176 &amp; !controllable_DEQ;
a272 := !a270 &amp; a268;
a274 := a272 &amp; !a178;
a276 := !controllable_DEQ &amp; i_FULL;
a278 := a276 &amp; controllable_ENQ;
a280 := !a278 &amp; a274;
a282 := controllable_DEQ &amp; !i_nEMPTY;
a284 := !a282 &amp; a280;
a286 := fair_cnt1_out &amp; n29;
a288 := fair_cnt0_out &amp; n29;
a290 := a288 &amp; a286;
a292 := !a290 &amp; a284;
a294 := !a292 &amp; a174;
a296 := a194 &amp; !a78;
a298 := a296 &amp; a118;
a300 := !a194 &amp; a78;
a302 := a300 &amp; !a118;
a304 := !a302 &amp; !a298;
a306 := !a118 &amp; !a78;
a308 := !a306 &amp; !a196;
a310 := !a308 &amp; a304;
a312 := !i_StoB_REQ0 &amp; controllable_BtoS_ACK0;
a314 := i_StoB_REQ0 &amp; !controllable_BtoS_ACK0;
a316 := !a314 &amp; !a312;
a318 := sys_fair0done_out &amp; n29;
a320 := !a318 &amp; !a316;
a322 := !i_StoB_REQ1 &amp; controllable_BtoS_ACK1;
a324 := i_StoB_REQ1 &amp; !controllable_BtoS_ACK1;
a326 := !a324 &amp; !a322;
a328 := sys_fair1done_out &amp; n29;
a330 := !a328 &amp; !a326;
a332 := !a330 &amp; !a320;
a334 := reg_stateG12_out &amp; n29;
a336 := sys_fair2done_out &amp; n29;
a338 := !a336 &amp; a334;
a340 := !a338 &amp; a332;
a342 := !a340 &amp; !a320;
a344 := !controllable_BtoR_REQ1 &amp; i_RtoB_ACK1;
a346 := controllable_BtoR_REQ1 &amp; !i_RtoB_ACK1;
a348 := !a346 &amp; !a344;
a350 := env_fair1done_out &amp; n29;
a352 := !a350 &amp; !a348;
a354 := i_RtoB_ACK0 &amp; !controllable_BtoR_REQ0;
a356 := !i_RtoB_ACK0 &amp; controllable_BtoR_REQ0;
a358 := !a356 &amp; !a354;
a360 := env_fair0done_out &amp; n29;
a362 := !a360 &amp; !a358;
a364 := !a362 &amp; !a352;
a366 := !a364 &amp; !a340;
a368 := a366 &amp; !a352;
a370 := !a300 &amp; !a296;
a372 := !a370 &amp; !a118;
a374 := a194 &amp; a78;
a376 := !a374 &amp; !a372;
a378 := !a340 &amp; !a330;
a380 := a366 &amp; !a362;
a382 := !a334 &amp; !a158;
a384 := !a382 &amp; !a134;
a386 := a364 &amp; a288;
a388 := !a364 &amp; !a288;
a390 := !a388 &amp; !a386;
a392 := a390 &amp; !a340;
a394 := !a386 &amp; a286;
a396 := a386 &amp; !a286;
a398 := !a396 &amp; !a394;
a400 := !a398 &amp; !a340;
a402 := !a340 &amp; !a338;
	n29 = 1;
	reg_stateG7_0_out = (!(!(!(reg_controllable_BtoR_REQ1_out &amp;&amp; n29) &amp;&amp; !(reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; !(reg_stateG7_0_out &amp;&amp; n29)) &amp;&amp; (!((!(reg_nstateG7_1_out &amp;&amp; n29) &amp;&amp; (reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; !(reg_controllable_BtoR_REQ1_out &amp;&amp; n29)) &amp;&amp; !(((reg_nstateG7_1_out &amp;&amp; n29) &amp;&amp; !(reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; (reg_controllable_BtoR_REQ1_out &amp;&amp; n29))));
	reg_controllable_BtoR_REQ1_out = controllable_BtoR_REQ1;
	reg_i_RtoB_ACK1_out = i_RtoB_ACK1;
	sys_fair0done_out = (!(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))));
	reg_controllable_BtoS_ACK0_out = controllable_BtoS_ACK0;
	env_fair1done_out = ((!(!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; !(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0)))))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1))));
	reg_i_nEMPTY_out = i_nEMPTY;
	reg_nstateG7_1_out = !(!((reg_nstateG7_1_out &amp;&amp; n29) &amp;&amp; (reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; !(!(!(!(reg_nstateG7_1_out &amp;&amp; n29) &amp;&amp; (reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; !((reg_nstateG7_1_out &amp;&amp; n29) &amp;&amp; !(reg_controllable_BtoR_REQ0_out &amp;&amp; n29))) &amp;&amp; !(reg_controllable_BtoR_REQ1_out &amp;&amp; n29)));
	reg_controllable_BtoS_ACK1_out = controllable_BtoS_ACK1;
	reg_controllable_SLC0_out = controllable_SLC0;
	sys_fair1done_out = (!(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))))) &amp;&amp; !(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))));
	env_fair0done_out = ((!(!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; !(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0)))))) &amp;&amp; !(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))));
	reg_controllable_ENQ_out = controllable_ENQ;
	reg_i_FULL_out = i_FULL;
	reg_stateG12_out = (!(!(reg_stateG12_out &amp;&amp; n29) &amp;&amp; !(reg_i_nEMPTY_out &amp;&amp; n29)) &amp;&amp; !(reg_controllable_DEQ_out &amp;&amp; n29));
	fair_cnt0_out = ((!(!(!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; !(fair_cnt0_out &amp;&amp; n29)) &amp;&amp; !((!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; (fair_cnt0_out &amp;&amp; n29))) &amp;&amp; !(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))))));
	fair_cnt1_out = (!(!(((!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; (fair_cnt0_out &amp;&amp; n29)) &amp;&amp; !(fair_cnt1_out &amp;&amp; n29)) &amp;&amp; !(!((!(!(env_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(!i_RtoB_ACK0 &amp;&amp; controllable_BtoR_REQ0) &amp;&amp; !(i_RtoB_ACK0 &amp;&amp; !controllable_BtoR_REQ0))) &amp;&amp; !(!(env_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(controllable_BtoR_REQ1 &amp;&amp; !i_RtoB_ACK1) &amp;&amp; !(!controllable_BtoR_REQ1 &amp;&amp; i_RtoB_ACK1)))) &amp;&amp; (fair_cnt0_out &amp;&amp; n29)) &amp;&amp; (fair_cnt1_out &amp;&amp; n29))) &amp;&amp; !(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))))));
	reg_controllable_DEQ_out = controllable_DEQ;
	env_safe_err_happened_out = !(!(env_safe_err_happened_out &amp;&amp; n29) &amp;&amp; (!(!((!((reg_i_nEMPTY_out &amp;&amp; n29) &amp;&amp; !i_nEMPTY) &amp;&amp; !(!(reg_i_nEMPTY_out &amp;&amp; n29) &amp;&amp; i_nEMPTY)) &amp;&amp; (!((reg_i_FULL_out &amp;&amp; n29) &amp;&amp; !i_FULL) &amp;&amp; !(!(reg_i_FULL_out &amp;&amp; n29) &amp;&amp; i_FULL))) &amp;&amp; (!((reg_controllable_DEQ_out &amp;&amp; n29) &amp;&amp; !(reg_controllable_ENQ_out &amp;&amp; n29)) &amp;&amp; !(!(reg_controllable_DEQ_out &amp;&amp; n29) &amp;&amp; (reg_controllable_ENQ_out &amp;&amp; n29)))) &amp;&amp; (!(((reg_controllable_DEQ_out &amp;&amp; n29) &amp;&amp; !(reg_controllable_ENQ_out &amp;&amp; n29)) &amp;&amp; i_FULL) &amp;&amp; (!((!(reg_controllable_DEQ_out &amp;&amp; n29) &amp;&amp; (reg_controllable_ENQ_out &amp;&amp; n29)) &amp;&amp; !i_nEMPTY) &amp;&amp; (!(((reg_i_RtoB_ACK1_out &amp;&amp; n29) &amp;&amp; !i_RtoB_ACK1) &amp;&amp; (reg_controllable_BtoR_REQ1_out &amp;&amp; n29)) &amp;&amp; (!(!(reg_controllable_BtoR_REQ1_out &amp;&amp; n29) &amp;&amp; i_RtoB_ACK1) &amp;&amp; (!(((reg_i_RtoB_ACK0_out &amp;&amp; n29) &amp;&amp; !i_RtoB_ACK0) &amp;&amp; (reg_controllable_BtoR_REQ0_out &amp;&amp; n29)) &amp;&amp; ((!(!(!((reg_i_StoB_REQ1_out &amp;&amp; n29) &amp;&amp; !i_StoB_REQ1) &amp;&amp; !(reg_controllable_BtoS_ACK1_out &amp;&amp; n29)) &amp;&amp; !((reg_controllable_BtoS_ACK1_out &amp;&amp; n29) &amp;&amp; !i_StoB_REQ1)) &amp;&amp; !(!(!((reg_i_StoB_REQ0_out &amp;&amp; n29) &amp;&amp; !i_StoB_REQ0) &amp;&amp; !(reg_controllable_BtoS_ACK0_out &amp;&amp; n29)) &amp;&amp; !((reg_controllable_BtoS_ACK0_out &amp;&amp; n29) &amp;&amp; !i_StoB_REQ0))) &amp;&amp; !(!(reg_controllable_BtoR_REQ0_out &amp;&amp; n29) &amp;&amp; i_RtoB_ACK0)))))))));
	reg_i_StoB_REQ1_out = i_StoB_REQ1;
	reg_i_RtoB_ACK0_out = i_RtoB_ACK0;
	sys_fair2done_out = (!(!(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)) &amp;&amp; (!(!(sys_fair1done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ1 &amp;&amp; !controllable_BtoS_ACK1) &amp;&amp; !(!i_StoB_REQ1 &amp;&amp; controllable_BtoS_ACK1))) &amp;&amp; !(!(sys_fair0done_out &amp;&amp; n29) &amp;&amp; !(!(i_StoB_REQ0 &amp;&amp; !controllable_BtoS_ACK0) &amp;&amp; !(!i_StoB_REQ0 &amp;&amp; controllable_BtoS_ACK0))))) &amp;&amp; !(!(sys_fair2done_out &amp;&amp; n29) &amp;&amp; (reg_stateG12_out &amp;&amp; n29)));
	reg_controllable_BtoR_REQ0_out = controllable_BtoR_REQ0;
	reg_i_StoB_REQ0_out = i_StoB_REQ0;

	
      if (!maintenance &amp;&amp; oup) {
        if (obs1_y &lt; 3*K-1)
          obs1_y = obs1_y +1;
      }
      else if (!maintenance &amp;&amp; odown) {
        if (obs1_y &gt; 0)
          obs1_y = obs1_y -1;
      }
      if (!maintenance &amp;&amp; oleft) {
        if (obs1_x &gt; 0)
          obs1_x = obs1_x -1;
      }
      else if (!maintenance &amp;&amp; oright) {
        if (obs1_x &lt; 3*K-1)
          obs1_x = obs1_x +1;
      }
      if (!shock) {
        if (rdown &amp; robot_y &gt; 0) 
          robot_y = robot_y - 1;
        else if (rup &amp; robot_y &lt; 3*K-1)
          robot_y = robot_y + 1;
        else if (rleft &amp; robot_x &gt; 0 )
          robot_x = robot_x - 1;
        else if (rright &amp; robot_x &lt; 3*K-1 )
          robot_x = robot_x + 1;
      }
	if((robot_x == obs1_x &amp; robot_y == obs1_y)){
		error = 1;
	}
	rleft=0;
	rright=0;
	rup=0;
	rdown=0;
	oleft=0;
	oright=0;
	oup=0;
	odown=0;
}
</declaration><template><name x="5" y="5">Template</name><declaration>// Place local declarations here.
</declaration><location id="id0" x="-40" y="-136"></location><location id="id1" x="304" y="312"><urgent/></location><location id="id2" x="392" y="312"><urgent/></location><location id="id3" x="480" y="304"><urgent/></location><location id="id4" x="568" y="296"><urgent/></location><location id="id5" x="416" y="184"><urgent/></location><location id="id6" x="480" y="176"><urgent/></location><location id="id7" x="-160" y="-48"></location><location id="id8" x="-344" y="-48"><urgent/></location><location id="id9" x="-520" y="-40"><urgent/></location><location id="id10" x="-512" y="88"><urgent/></location><location id="id11" x="-376" y="96"><urgent/></location><location id="id12" x="-256" y="96"><urgent/></location><location id="id13" x="-120" y="96"><urgent/></location><location id="id14" x="0" y="96"><urgent/></location><location id="id15" x="264" y="104"><urgent/></location><location id="id16" x="480" y="112"><urgent/></location><location id="id17" x="584" y="120"><urgent/></location><location id="id18" x="720" y="112"><urgent/></location><location id="id19" x="728" y="-48"><urgent/></location><location id="id20" x="560" y="-40"><urgent/></location><location id="id21" x="416" y="-40"><urgent/></location><location id="id22" x="280" y="-48"><urgent/></location><location id="id23" x="144" y="-40"><urgent/></location><location id="id24" x="16" y="-40"><urgent/></location><init ref="id0"/><transition><source ref="id0"/><target ref="id24"/></transition><transition><source ref="id15"/><target ref="id14"/></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id15"/><label kind="assignment" x="224" y="208">odown=0</label><nail x="200" y="264"/></transition><transition controllable="false" action=""><source ref="id2"/><target ref="id1"/><label kind="assignment" x="320" y="336">oup=0</label><nail x="336" y="248"/></transition><transition controllable="false" action=""><source ref="id3"/><target ref="id2"/><label kind="assignment" x="376" y="308">oright=1</label><nail x="392" y="256"/></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id15"/><label kind="assignment" x="224" y="208">odown=1</label></transition><transition controllable="false" action=""><source ref="id2"/><target ref="id1"/><label kind="assignment" x="288" y="312">oup=1</label></transition><transition controllable="false" action=""><source ref="id3"/><target ref="id2"/><label kind="assignment" x="376" y="308">oright=0</label></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id3"/><label kind="assignment" x="464" y="300">oleft=0</label></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id3"/><label kind="assignment" x="464" y="300">oleft=1</label><nail x="488" y="232"/></transition><transition controllable="false" action=""><source ref="id18"/><target ref="id4"/><label kind="synchronisation" x="584" y="189">obs?</label><label kind="assignment" x="584" y="204">cnt = (cnt &lt; 32) ? cnt + 1 : 0</label></transition><transition action=""><source ref="id5"/><target ref="id15"/><label kind="assignment" x="312" y="120">rdown=1</label><nail x="376" y="104"/></transition><transition action=""><source ref="id5"/><target ref="id15"/><label kind="assignment" x="320" y="80">rdown=0</label></transition><transition action=""><source ref="id6"/><target ref="id5"/><label kind="assignment" x="456" y="200">rup=1</label><nail x="456" y="216"/></transition><transition action=""><source ref="id6"/><target ref="id5"/><label kind="assignment" x="440" y="184">rup=0</label></transition><transition action=""><source ref="id16"/><target ref="id6"/><label kind="assignment" x="420" y="144">rright=0</label><nail x="456" y="152"/></transition><transition action=""><source ref="id16"/><target ref="id6"/><label kind="assignment" x="420" y="144">rright=1</label></transition><transition controllable="false" action=""><source ref="id7"/><target ref="id24"/><label kind="assignment" x="-132" y="-44">update()</label></transition><transition action=""><source ref="id8"/><target ref="id7"/><label kind="assignment" x="-320" y="-48">controllable_DEQ=1</label><nail x="-224" y="-16"/></transition><transition action=""><source ref="id8"/><target ref="id7"/><label kind="assignment" x="-320" y="-48">controllable_DEQ=0</label><nail x="-248" y="-88"/></transition><transition action=""><source ref="id9"/><target ref="id8"/><label kind="assignment" x="-492" y="-44">controllable_ENQ=1</label><nail x="-432" y="-32"/></transition><transition action=""><source ref="id9"/><target ref="id8"/><label kind="assignment" x="-492" y="-44">controllable_ENQ=0</label><nail x="-448" y="-80"/></transition><transition action=""><source ref="id10"/><target ref="id9"/><label kind="assignment" x="-576" y="24">controllable_SLC0=1</label></transition><transition action=""><source ref="id10"/><target ref="id9"/><label kind="assignment" x="-576" y="24">controllable_SLC0=0</label><nail x="-568" y="24"/></transition><transition action=""><source ref="id11"/><target ref="id10"/><label kind="assignment" x="-504" y="92">controllable_BtoS_ACK1=1</label><nail x="-472" y="144"/></transition><transition action=""><source ref="id11"/><target ref="id10"/><label kind="assignment" x="-504" y="92">controllable_BtoS_ACK1=0</label><nail x="-472" y="32"/></transition><transition action=""><source ref="id12"/><target ref="id11"/><label kind="assignment" x="-392" y="48">controllable_BtoS_ACK0=1</label><nail x="-344" y="152"/></transition><transition action=""><source ref="id12"/><target ref="id11"/><label kind="assignment" x="-376" y="96">controllable_BtoS_ACK0=0</label><nail x="-344" y="40"/></transition><transition action=""><source ref="id13"/><target ref="id12"/><label kind="assignment" x="-248" y="96">controllable_BtoR_REQ1=1</label><nail x="-200" y="136"/></transition><transition action=""><source ref="id13"/><target ref="id12"/><label kind="assignment" x="-248" y="96">controllable_BtoR_REQ1=0</label><nail x="-200" y="48"/></transition><transition action=""><source ref="id14"/><target ref="id13"/><label kind="assignment" x="-120" y="96">controllable_BtoR_REQ0=1</label><nail x="-72" y="136"/></transition><transition action=""><source ref="id14"/><target ref="id13"/><label kind="assignment" x="-120" y="96">controllable_BtoR_REQ0=0</label><nail x="-72" y="48"/></transition><transition action=""><source ref="id17"/><target ref="id16"/><label kind="assignment" x="520" y="136">rleft=0</label><nail x="528" y="160"/></transition><transition action=""><source ref="id17"/><target ref="id16"/><label kind="assignment" x="504" y="104">rleft=1</label><nail x="536" y="72"/></transition><transition controllable="false" action=""><source ref="id18"/><target ref="id17"/><label kind="synchronisation" x="592" y="101">robot?</label><nail x="648" y="120"/></transition><transition controllable="false" action=""><source ref="id19"/><target ref="id18"/><label kind="assignment" x="664" y="32">i_StoB_REQ0=0</label></transition><transition controllable="false" action=""><source ref="id19"/><target ref="id18"/><label kind="assignment" x="664" y="32">i_StoB_REQ0=1</label><nail x="792" y="48"/></transition><transition controllable="false" action=""><source ref="id20"/><target ref="id19"/><label kind="assignment" x="584" y="-44">i_nEMPTY=1</label><nail x="672" y="16"/></transition><transition controllable="false" action=""><source ref="id21"/><target ref="id20"/><label kind="assignment" x="428" y="-40">i_FULL=1</label><nail x="488" y="8"/></transition><transition controllable="false" action=""><source ref="id22"/><target ref="id21"/><label kind="assignment" x="288" y="-44">i_RtoB_ACK0=1</label><nail x="344" y="8"/></transition><transition controllable="false" action=""><source ref="id23"/><target ref="id22"/><label kind="assignment" x="152" y="-44">i_StoB_REQ1=1</label><nail x="208" y="16"/></transition><transition controllable="false" action=""><source ref="id24"/><target ref="id23"/><label kind="assignment" x="20" y="-40">i_RtoB_ACK1=0</label><nail x="80" y="16"/></transition><transition controllable="false" action=""><source ref="id20"/><target ref="id19"/><label kind="assignment" x="584" y="-44">i_nEMPTY=0</label><nail x="632" y="-120"/></transition><transition controllable="false" action=""><source ref="id21"/><target ref="id20"/><label kind="assignment" x="428" y="-40">i_FULL=0</label><nail x="472" y="-112"/></transition><transition controllable="false" action=""><source ref="id22"/><target ref="id21"/><label kind="assignment" x="288" y="-44">i_RtoB_ACK0=0</label><nail x="352" y="-120"/></transition><transition controllable="false" action=""><source ref="id23"/><target ref="id22"/><label kind="assignment" x="152" y="-44">i_StoB_REQ1=0</label><nail x="208" y="-104"/></transition><transition controllable="false" action=""><source ref="id24"/><target ref="id23"/><label kind="assignment" x="16" y="-64">i_RtoB_ACK1=1</label><nail x="64" y="-96"/></transition></template><template><name>Obs</name><declaration>clock x;</declaration><location id="id25" x="-344" y="-56"><label kind="invariant" x="-354" y="-41">x&lt;=3</label></location><init ref="id25"/><transition controllable="false" action=""><source ref="id25"/><target ref="id25"/><label kind="guard" x="-424" y="-192">x&lt;=3 &amp;&amp; x&gt;=2</label><label kind="synchronisation" x="-404" y="-71">obs!</label><label kind="assignment" x="-404" y="-56">x=0</label><nail x="-416" y="-160"/><nail x="-328" y="-168"/></transition></template><template><name>Robot</name><declaration>clock x;</declaration><location id="id26" x="-552" y="-200"><label kind="invariant" x="-562" y="-185">x&lt;=7</label></location><init ref="id26"/><transition controllable="false" action=""><source ref="id26"/><target ref="id26"/><label kind="guard" x="-612" y="-230">x&gt;=6 &amp;&amp; x&lt;=7</label><label kind="synchronisation" x="-612" y="-215">robot!</label><label kind="assignment" x="-612" y="-200">x=0</label><nail x="-600" y="-104"/><nail x="-488" y="-120"/></transition></template><system>// Place template instantiations here.
Process = Template();

// List one or more processes to be composed into a system.
system Process,Obs,Robot;</system></nta>